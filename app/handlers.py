import time

import app.keyboards as kb
import app.database.requests as rq


from aiogram import Router, types, F, Bot
from aiogram.filters import Command
from aiogram.types import CallbackQuery, FSInputFile

router = Router()


#Begin
@router.message(Command("start"))
async def cmd_start(message: types.Message, bot: Bot) -> None:
    """
    This handler receives messages with `/start` command
    """
    if message.chat.type == "private":
        await bot.send_photo(message.chat.id, photo="https://i.ibb.co/CvcYXnT/welcome.jpg", caption="")
        text = "<b>–ü—Ä–∏–≤–µ—Ç üëã –≠—Ç–æ –∫–æ–º–∞–Ω–¥–∞ –ö—É—Ä–∏–º –ö—Ä–∏–ø—Ç—É</b>\n\n" \
            "–ü–æ—Å–ª–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –±–æ—Ç–∞ —Ç—ã —É–∑–Ω–∞–µ—à—å :\n\n" \
            "‚Ä¢ –ö–∞–∫ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞ –º–µ–º-–∫–æ–∏–Ω–∞—Ö –≤ –∫—Ä–∏–ø—Ç–µ –∏ —É–º–Ω–æ–∂–∏—Ç—å —Å–≤–æ–π –∫–∞–ø–∏—Ç–∞–ª –≤ 100 —Ä–∞–∑.\n\n" \
            "‚Ä¢ –ö–∞–∫ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –¥–µ–Ω—å–≥–∏, –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–ø–∏—Å—ã–≤–∞—è—Å—å –≤ —Å–æ—Ü–∏–∞–ª—å–Ω–æ —Å–µ—Ç–∏ Warpcast –±–µ–∑ –≤–ª–æ–∂–µ–Ω–∏–π.\n\n" \
            "‚Ä¢ –ö–∞–∫ —É–≤–æ–ª–∏—Ç—å—Å—è —Å —Ä–∞–±–æ—Ç—ã –∏ —Å—Ç–∞—Ç—å –ø—Ä–æ—Ñ–µ—Å—Å–∏–∞–Ω–∞–ª—å–Ω—ã–º –∏–Ω–≤–µ—Å—Ç–æ—Ä–æ–º –≤ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É.\n\n" \
            "‚Ä¢ –ö–∞–∫ —Å–∫–æ–ª–æ—Ç–∏—Ç—å —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –∫–∞–ø–∏—Ç–∞–ª –∑–∞ 2024-2025 –≥–æ–¥.\n\n" \
            "–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ? –¢–æ–≥–¥–∞ –ø–æ–≥–Ω–∞–ª–∏!\n\n " \
            "–ß—Ç–æ–±—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –±–æ—Ç–∞ –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –≤—Å–µ –Ω–∞—à–∏ - <a href='https://t.me/TestFolderLinks'>—Ä–µ—Å—É—Ä—Å—ã</a>"
        await message.answer(text, parse_mode="HTML",
                             disable_web_page_preview=True,
                             reply_markup=kb.settings)


#Check sub
@router.message(F.text == '–ü—Ä–æ–≤–µ—Ä–∏—Ç—å')
async def check_subscription(message: types.Message, bot: Bot):
    chat_id_list = ["-1002216390442", "-1002234927815"]
    status_channel_list = []

    for chat_id in chat_id_list:
        chat_member = await message.bot.get_chat_member(chat_id=chat_id, user_id=message.from_user.id)
        if chat_member.status in ['administrator', 'creator', 'member']:
            status_channel_list.append("+")
        else:
            status_channel_list.append("-")

    if "-" in status_channel_list:
        text = '–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–æ–±–∞–≤–∏—Ç—å –≤—Å–µ –Ω–∞—à–∏ <a href="https://t.me/TestFolderLinks">—Ä–µ—Å—É—Ä—Å—ã</a>.'
        await message.answer(text, parse_mode="HTML",
                             disable_web_page_preview=True,
                             reply_markup=kb.settings
                             )
    else:
        await message.answer(text="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!", reply_markup=kb.del_keyboard)
        await bot.send_photo(message.chat.id, photo="https://i.ibb.co/KyGBmBM/memcoin-1part.jpg", caption="")
        text ="<b>–ú–∏–ª–ª–∏–æ–Ω—ã –Ω–∞ –º–µ–º-–∫–æ–∏–Ω–∞—Ö –≤ 2024-2025 –≥–æ–¥—É.</b>\n\n" \
                "–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –∫–æ—Ç–æ—Ä—ã–π —É–∂–µ –ø—Ä–∏–Ω–µ—Å –Ω–∞—à–µ–π –∫–æ–º–∞–Ω–¥–µ –±–æ–ª–µ–µ 20.000.000 –º–ª–Ω —Ä—É–±–ª–µ–π\n\n" \
                "<b>–ß–∏—Ç–∞–π —ç—Ç—É —Å—Ç–∞—Ç—å—é –∏ —É–∑–Ω–∞–µ—à—å:</b>\n\n" \
                "‚Ä¢ –ü–æ—á–µ–º—É –Ω–∞ –º–µ–º-–∫–æ–∏–Ω–∞—Ö –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –æ–≥—Ä–æ–º–Ω—ã–µ –¥–µ–Ω—å–≥–∏? \n\n" \
                "‚Ä¢ –ß—Ç–æ —Ç–∞–∫–æ–µ –±–ª–æ–∫—á–µ–π–Ω Solana –∏ –ø–æ—á–µ–º—É –∫ –Ω–µ–º—É —Å—Ç–æ–ª—å–∫–æ –≤–Ω–∏–º–∞–Ω–∏—è? \n\n" \
                "‚Ä¢ –ì–¥–µ —Ç–æ—Ä–æ–≥–æ–≤–∞—Ç—å –∏ –ø–æ–∫—É–ø–∞—Ç—å —ç—Ç–∏ —Å–∞–º—ã–µ –º–µ–º-–∫–æ–∏–Ω—ã?\n\n" \
                "‚Ä¢ –ö–∞–∫ –±–µ–∑–æ–ø–∞—Å–Ω–æ —Ç–æ—Ä–≥–æ–≤–∞—Ç—å\n\n"
        await message.answer(text, parse_mode="HTML",
                             reply_markup=kb.read_meme_part1)

        time.sleep(30.0)

        await bot.send_photo(message.chat.id, photo="https://i.ibb.co/8m84B2m/memcoin-2part.jpg", caption="")
        text = "<b>–ú–∏–ª–ª–∏–æ–Ω—ã –Ω–∞ –º–µ–º-–∫–æ–∏–Ω–∞—Ö –≤ 2024-2025 –≥–æ–¥—É –ß.2</b>\n\n" \
                "–¢—ã —É–∂–µ –∑–Ω–∞–µ—à—å, –ø–æ—á–µ–º—É –Ω–∞ –º–µ–º–∞—Ö –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –æ–≥—Ä–æ–º–Ω—ã–µ –¥–µ–Ω—å–≥–∏.\n\n" \
               "<b>–ß–∏—Ç–∞–π 2 —á–∞—Å—Ç—å —Å—Ç–∞—Ç—å–∏ –∏ —É–∑–Ω–∞–µ—à—å:</b>\n\n" \
               "‚Ä¢ –ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å –ø–µ—Ä–≤—ã–µ 10.000$ —Å–æ 100$\n\n" \
               '‚Ä¢ –ö—Ç–æ —Ç–∞–∫–∏–µ "–∫–æ–ª–ª–µ—Ä—ã" –∏ –¥–ª—è —á–µ–≥–æ –æ–Ω–∏ –Ω—É–∂–Ω—ã\n\n' \
               '‚Ä¢ –í–∞–∂–Ω–æ—Å—Ç—å –Ω–µ—Ç–≤–æ—Ä–∫–∏–Ω–≥–∞ –≤ –∫—Ä–∏–ø—Ç–æ —á–∞—Ç–∞—Ö\n\n' \
               '‚Ä¢ –ß—Ç–æ —Ç–∞–∫–æ–µ DEX –∏ CEX\n\n'
        await message.answer(text, parse_mode="HTML",
                             reply_markup=kb.read_meme_part2)


        time.sleep(30.0)


        await bot.send_photo(message.chat.id, photo="https://i.ibb.co/bWqxHT8/warpcast.jpg", caption="")
        text = "<b>–ù–µ—Ç, –¥–µ–Ω–µ–≥? –ü–æ–ø—Ä–æ—Å–∏ 500 —Ä—É–±–ª–µ–π —É –¥—Ä—É–≥–∞!</b>\n\n" \
                "–ù–µ —Ö–æ—á–µ—à—å –≤–∫–ª–∞–¥—ã–≤–∞—Ç—å –±–æ–ª—å—à–∏–µ –¥–µ–Ω—å–≥–∏ –≤ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É –∏ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –ø–µ—Ä–≤—ã–π –∫–∞–ø–∏—Ç–∞–ª? –£ –Ω–∞—Å –µ—Å—Ç—å —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è —Ç–µ–±—è! –ü–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –≤—Å–µ–≥–æ 500 —Ä—É–±–ª–µ–π, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å —Å–≤–æ–π –ø—É—Ç—å –∫ —É—Å–ø–µ—Ö—É –∑–¥–µ—Å—å –∏ —Å–µ–π—á–∞—Å!\n\n" \
                "<b>–ß—Ç–æ —Ç—ã —É–∑–Ω–∞–µ—à—å –≤ —ç—Ç–æ–π —Å—Ç–∞—Ç—å–µ?</b>\n\n" \
                "‚Ä¢ –ö–∞–∫ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ –≤–ª–æ–∂–µ–Ω–∏—è–º–∏? \n\n" \
                "‚Ä¢ –ß—Ç–æ —Ç–∞–∫–æ–µ SocialFi –∏ Warpcast\n\n" \
                "‚Ä¢ –ü–æ—á–µ–º—É —ç—Ç–æ –æ–¥–∏–Ω –∏–∑ —Ç—Ä–µ–Ω–¥–æ–≤ –Ω–æ–≤–æ–≥–æ –±—ã—á—å–µ–≥–æ —Ä—ã–Ω–∫–∞?\n\n" \
                "‚Ä¢ –ö–∞–∫ —Ç—ã –º–æ–≥ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å 100.000$ –∑–∞ –ª–∞–π–∫–∏ –∏ –∫–æ–º–µ–Ω—Ç—ã.\n\n"
        await message.answer(text, parse_mode="HTML",
                             reply_markup=kb.warp)

        time.sleep(30.0)


        text = "–£ –Ω–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å –¥–ª—è —Ç–µ–±—è –µ—â–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ –±–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –ø–æ–¥–∞—Ä–∫–æ–≤ - —á—Ç–æ–±—ã –∏—Ö –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–ø—Ä–∞–≤—å —Å–≤–æ–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã.\n"
        await message.answer(text, parse_mode="HTML",
                                      reply_markup=kb.req_contact)

#Processing phone
@router.message(F.contact)
async def contact_callback(message: types.Message):
    await rq.set_tgid_and_number(message.from_user.id, int(message.contact.phone_number))
    await message.answer("–ù–æ–º–µ—Ä –ø–æ–ª—É—á–µ–Ω", reply_markup=kb.del_keyboard)
    await message.answer(text="–°–ø–∞—Å–∏–±–æ, –≤–æ—Ç —Ç–≤–æ–π <a href='#'>–ø–æ–¥–∞—Ä–æ–∫</a>!", parse_mode="HTML",
                         reply_markup=kb.number_taken)

#Skip write number
@router.message(F.text == "–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å")
async def skip_send_number(message: types.Message, bot: Bot):
    await message.answer(text="–í–≤–æ–¥ –ø—Ä–æ–ø—É—â–µ–Ω", reply_markup=kb.del_keyboard)
    await bot.send_photo(message.chat.id, photo="https://i.ibb.co/tm0cwb6/warpcast-reg.jpg", caption="")
    text = "<b>–û—Ç–ª–∏—á–Ω–æ! –í–æ—Ç —Ç–≤–æ–π –≤–∏–¥–µ–æ –≥–∞–π–¥ –ø–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ Warpcast!</b>\n\n" \
            "–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø—Ä–æ—á–∏—Ç–∞–ª —Å—Ç–∞—Ç—å—é. –¢–µ–ø–µ—Ä—å —Ç—ã –∑–Ω–∞–µ—à—å, –∫–∞–∫ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –¥–µ–Ω—å–≥–∏ –∑–∞ –æ–±—â–µ–Ω–∏–µ –≤ —Å–æ—Ü-—Å–µ—Ç—è—Ö. –û—Å—Ç–∞–ª–æ—Å—å —Ç–æ–ª—å–∫–æ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç.\n\n "
    await message.answer(text, parse_mode="HTML",
                         reply_markup=kb.video_warp)

    time.sleep(30.0)

    await bot.send_photo(message.chat.id, photo="https://i.ibb.co/BL14GBg/last-pump.jpg", caption="")
    text = "<b>–ù—É —á—Ç–æ? –ú–æ–π –¥–æ—Ä–æ–≥–æ–π –¥—Ä—É–≥</b>, –Ω–∞–¥–µ—é—Å—å —Ç—ã —É–∂–µ –ø–æ–Ω—è–ª, —á—Ç–æ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –≤ –∫—Ä–∏–ø—Ç–µ –º–æ–∂–Ω–æ –∏ —è–≤–Ω–æ –ø—Ä–æ—â–µ —á–µ–º —Ö–æ–¥–∏—Ç—å –Ω–∞ —Å–∫—É—á–Ω—É—é —Ä–∞–±–æ—Ç—É üòî\n\n" \
            "–ù–æ —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –±–µ–∑ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, —Ç—ã –Ω–µ —Ç–æ–ª—å–∫–æ –Ω–µ –∑–∞—Ä–∞–±–æ—Ç–∞–µ—à—å, –Ω–æ –∏ <b>–ø–æ—Ç–µ—Ä—è–µ—à—å —Å–≤–æ–∏ –¥–µ–Ω—å–≥–∏</b>.\n\n" \
            "<b>–ù–æ —É –Ω–∞—Å –µ—Å—Ç—å —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è —Ç–µ–±—è!</b>\n\n" \
            "–ú—ã —Ä–µ—à–∏–ª–∏ —Å–∫—É–ø–∏—Ç—å –¥–æ—Å—Ç—É–ø –≤–æ –í–°–ï –ø—Ä–∏–≤–∞—Ç–Ω—ã–µ —Ç–µ–ª–µ–≥—Ä–∞–º–º —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ –≤ –°–ù–ì –¥–ª—è —Å–≤–æ–µ–≥–æ –∫–æ–º—å—é–Ω–∏—Ç–∏\n\n" \
            "‚úçÔ∏è | –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç—É–ø–∞ –≤ –ø—Ä–∏–≤–∞—Ç–Ω—ã–µ –∫–∞–Ω–∞–ª—ã —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç <b>1.000.000 —Ä—É–±–ª–µ–π/–º–µ—Å</b> \n\n" \
            "<b>–ü—Ä–µ–¥–ª–∞–≥–∞–µ–º —Ç–µ–±–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –∑–µ—Ä–∫–∞–ª–æ –≤—Å–µ—Ö –°–ù–ì –ø—Ä–∏–≤–∞—Ç–æ–∫ –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ</b> \n" \
            "<b>–í–°–ï–ì–û –ó–ê 39$</b>"
    await message.answer(text, parse_mode="HTML",
                                  reply_markup=kb.next_art_8)

@router.callback_query(F.data == 'next-article-4')
async def next_article_4(callback: CallbackQuery, bot: Bot):
    await bot.send_photo(callback.chat.id, photo="https://i.ibb.co/tm0cwb6/warpcast-reg.jpg", caption="")
    text = "<b>–û—Ç–ª–∏—á–Ω–æ! –í–æ—Ç —Ç–≤–æ–π –≤–∏–¥–µ–æ –≥–∞–π–¥ –ø–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ Warpcast!</b>\n\n" \
            "–°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø—Ä–æ—á–∏—Ç–∞–ª —Å—Ç–∞—Ç—å—é. –¢–µ–ø–µ—Ä—å —Ç—ã –∑–Ω–∞–µ—à—å, –∫–∞–∫ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –¥–µ–Ω—å–≥–∏ –∑–∞ –æ–±—â–µ–Ω–∏–µ –≤ —Å–æ—Ü-—Å–µ—Ç—è—Ö. –û—Å—Ç–∞–ª–æ—Å—å —Ç–æ–ª—å–∫–æ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç.\n\n"
    await callback.message.answer(text, parse_mode="HTML",
                                  reply_markup=kb.video_warp)

    time.sleep(30.0)

    await bot.send_photo(callback.chat.id, photo="https://i.ibb.co/BL14GBg/last-pump.jpg", caption="")
    text = "<b>–ù—É —á—Ç–æ? –ú–æ–π –¥–æ—Ä–æ–≥–æ–π –¥—Ä—É–≥</b>, –Ω–∞–¥–µ—é—Å—å —Ç—ã —É–∂–µ –ø–æ–Ω—è–ª, —á—Ç–æ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –≤ –∫—Ä–∏–ø—Ç–µ –º–æ–∂–Ω–æ –∏ —è–≤–Ω–æ –ø—Ä–æ—â–µ —á–µ–º —Ö–æ–¥–∏—Ç—å –Ω–∞ —Å–∫—É—á–Ω—É—é —Ä–∞–±–æ—Ç—É üòî\n\n" \
            "–ù–æ —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –±–µ–∑ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, —Ç—ã –Ω–µ —Ç–æ–ª—å–∫–æ –Ω–µ –∑–∞—Ä–∞–±–æ—Ç–∞–µ—à—å, –Ω–æ –∏ <b>–ø–æ—Ç–µ—Ä—è–µ—à—å —Å–≤–æ–∏ –¥–µ–Ω—å–≥–∏</b>.\n\n" \
            "<b>–ù–æ —É –Ω–∞—Å –µ—Å—Ç—å —Ä–µ—à–µ–Ω–∏–µ –¥–ª—è —Ç–µ–±—è!</b>\n\n" \
            "–ú—ã —Ä–µ—à–∏–ª–∏ —Å–∫—É–ø–∏—Ç—å –¥–æ—Å—Ç—É–ø –≤–æ –í–°–ï –ø—Ä–∏–≤–∞—Ç–Ω—ã–µ —Ç–µ–ª–µ–≥—Ä–∞–º–º —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ –≤ –°–ù–ì –¥–ª—è —Å–≤–æ–µ–≥–æ –∫–æ–º—å—é–Ω–∏—Ç–∏\n\n" \
            "‚úçÔ∏è | –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç—É–ø–∞ –≤ –ø—Ä–∏–≤–∞—Ç–Ω—ã–µ –∫–∞–Ω–∞–ª—ã —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç <b>1.000.000 —Ä—É–±–ª–µ–π/–º–µ—Å</b> \n\n" \
            "<b>–ü—Ä–µ–¥–ª–∞–≥–∞–µ–º —Ç–µ–±–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –∑–µ—Ä–∫–∞–ª–æ –≤—Å–µ—Ö –°–ù–ì –ø—Ä–∏–≤–∞—Ç–æ–∫ –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ</b> \n" \
            "<b>–í–°–ï–ì–û –ó–ê 39$</b>"
    await callback.message.answer(text, parse_mode="HTML",
                                  reply_markup=kb.next_art_8)



@router.callback_query(F.data == 'what-can-buy')
async def next_article_8(callback: CallbackQuery):
    text = "–¢–µ–∫—Å—Ç, —á—Ç–æ –º–æ–∂–Ω–æ –∫—É–ø–∏—Ç—å –Ω–∞ 39$"
    await callback.message.answer(text, parse_mode="HTML",
                                  reply_markup=kb.what_can_buy)


@router.callback_query(F.data == 'show-reviews')
async def show_reviews(callback: CallbackQuery):
    text = "–û—Ç–∑—ã–≤—ã"
    await callback.message.answer(text, parse_mode="HTML",
                                  reply_markup=kb.show_reviews)

@router.callback_query(F.data == 'how-much-money')
async def show_reviews(callback: CallbackQuery):
    text = "–¢–µ–∫—Å—Ç. –°–∫–æ–ª—å–∫–æ –Ω—É–∂–Ω–æ?"
    await callback.message.answer(text, parse_mode="HTML",
                                  reply_markup=kb.how_much)

@router.callback_query(F.data == 'next-article-8')
async def next_article_8(callback: CallbackQuery):
    text = "–ü–æ—á–µ–º—É —Ç—ã –µ—â–µ –Ω–µ —Å –Ω–∞–º–∏?\n" \
        "–ù–æ –≤–æ–∑–º–æ–∂–Ω–æ, —á—Ç–æ —É —Ç–µ–±—è –æ—Å—Ç–∞–ª–∏—Å—å –≤–æ–ø—Ä–æ—Å–∏–∫–∏.\n" \
        "–í—ã–±–µ—Ä–∏ —Ç–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç, –∏ —è –æ—Ç–ø—Ä–∞–≤–ª—é —Ç–µ–±–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:\n" \
        "\n" \
        "1. –°–∫–æ–ª—å–∫–æ –¥–µ–Ω–µ–≥ –Ω—É–∂–Ω–æ –¥–ª—è —Å—Ç–∞—Ä—Ç–∞ –≤ –∫—Ä–∏–ø—Ç–µ? - –ø–æ—Å—Ç\n" \
        "2. –ê –µ—Å—Ç—å –ª–∏ —É –≤–∞—Å –æ—Ç–∑—ã–≤—ã ? - –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –æ—Ç–∑–æ–≤–∏–∫\n" \
        "–ù–∞–∂–º–∏ –Ω–∞ —Ü–∏—Ñ—Ä—É –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ üëáüëá"
    await callback.message.answer(text, parse_mode="HTML",
                                  reply_markup=kb.what_can_buy)